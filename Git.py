# git --version Проверка версии Git
# config --global user.name "Soloo333" Установка имени пользователя
# git config --global user.email Soloo333@gmail.com Установка электронной почты

# Название команды-----------Действие
# pwd------------------------показать текущий каталог
# ls-------------------------показать файлы в данной папке, кроме скрытых
# ls -f----------------------показать файлы в данной папке, включая скрытые
# cd c:----------------------перейти к диску (в примере диск C)
# cd app---------------------перейти в конкретный каталог (в примере папка app)
# cd - ----------------------вернуться назад
# cd ..	---------------------подняться на один уровень вверх
# cd ../..	-----------------подняться на два уровня вверх
# mkdir	---------------------создать папку
# git init Инициализация папки в Git

# git status Проверка статуса папки в Git

# On branch master. Сообщение означает, что в настоящий момент активна ветка master. Как правило, это основная
# ветка в репозитории.

# Your branch is up to date with origin/master. Сообщение означает, что файлы в ветке master синхронизированы с
# веткой master на сервере. Origin — это и есть удалённый сервер.

# Working tree clean дословно означает, что рабочий каталог не содержит изменённых файлов. Система контроля версий
# Git использует так называемую архитектуру трёх деревьев. Working tree связана с рабочей директорией Git, в которой
# содержатся рабочие версии файлов.

# Nothing to commit значит, что все изменения были зафиксированы и нет новых изменений в файлах для фиксации изменений.

# git branch Проверка названия главной ветки git


# ---------------------------------------------- Коммит ----------------------------------------------------------------
# git add -A Добавление всех файлов в которые есть в директории
# git add Имя_файла Добавление отдельного файла с указанием имени файла
# git commit -m "Комментарий к файлу" Сбор в общий коммит


# Содержимое директории .git
# Что содержится в папках и файлах:

# В файле config находятся настройки данного репозитория. Его содержимое представлено в текстовом формате.

# Файл HEAD указывает на текущую ветку.

# В файле index хранится содержимое индекса.

# В директории objects находится, собственно, база данных объектов Git. Если открыть каталог objects,
# то в нём будут находиться каталоги, имена которых представлены двумя шестнадцатеричными числами,
# внутри которых будут файлы, имена которых представлены 38 шестнадцатеричными числами.
# Вместе имя каталога и файл образуют 40-разрядный хэш, взятый от имени файла и его содержимого.

# В директории refs находятся ссылки на объекты коммитов в этой базе (ветки).

# Директория logs хранит логи коммитов.

# В директории info расположен файл с глобальными настройкам игнорирования файлов.
# Он позволяет исключить файлы, которые вы не хотите помещать в.gitignore

# В директории hooks располагаются клиентские и серверные триггеры


# Git commit -a	При выполнении команды с флагом -a будет сделан снимок всех изменений в рабочем каталоге.
# Это включает в себя только изменения отслеживаемых файлов
# (то есть тех, которые были добавлены с помощью git add ранее).

# git commit -am "commit message"	Сочетание флагов -a и -m создаёт коммит всех изменений с сообщением для коммита

# Git commit --amend	Выбранные изменения будут добавлены в последний коммит.
# Команда также вызовет открытие системного текстового редактора для внесения изменений в сообщение коммита.
# Эту команду часто используют, если была допущена ошибка.


# ---------------------------------------------- Ветвление и коммиты слияния -------------------------------------------

# git branch имя_ветки Создание новой ветки в git
# git checkout имя_ветки Переход на новую ветку в git
# git checkout -b имя_ветки Создание новой ветки и переключение на неё сразу
# git branch Просмотр имеющихся веток в git
# git branch -m старое-имя-ветки новое-имя-ветки Изменить название ветки
# git merge позволяет взять независимые части разработки и интегрировать их в одну ветку
# git merge master влить новые изменения в текущую ветку
# git branch -d имя_ветки Удалить ветку
# git status и git log Показывает историю изменений
# git branch --list -v Информацию о последних коммитах каждой из веток
# dir Команда для проверки файлов в ветке
#
# git clone Клонирует репозиторий на комп (Открывает репозиторий на компе - git clone ссылка_на_репозиторий_в_gitHub)


# ----------------------------------------------------------------------------------------------------------------------
# git init - Создание репозитория в Git
# git config --global user.name "Name"
# git config --global user.email email@example.ru
# git add Имя файла - Фиксация файла в репозитории
# git commit -m "Комментарий Коммита"
# git push origin master - загрузка в репозиторий GitHub

